<?php

/**
 * Content
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Lavita
 * @subpackage model
 * @author     AlexanderDupree
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Content extends BaseContent
{
    const kIdKey = "id";
    const kSectionIdKey = "section_id";
    const kHTMLKey = "html";
    const kVisibilityKey = "visibility";

    /*
     * Create Content for Section
     * This method creates new section content according to incoming params
    */
    public static function createNewContentWithParams($params)
    {
        $contentObject = new Content();

        $contentObject->setSectionId($params[self::kSectionIdKey]);
        $contentObject->setHtml($params[self::kHTMLKey]);
        $contentObject->setVisibility($params[self::kVisibilityKey]=="on" ? 1 : 0);
        $contentObject->setCreatedAt(date("Y-m-d H:m:s"));
        $contentObject->setUpdatedAt(date("Y-m-d H:m:s"));
        $contentObject->save();
    }

    /*
     * Update Content for Section
     * This method updates concrete section content according to incoming params
    */
    public static function updateContentWithParams($params)
    {
        if(!$params[self::kIdKey])
            return;

        $concreteContent =  ContentTable::getInstance()->findOneBy(self::kIdKey, $params[self::kIdKey]);

        if(count($concreteContent) == 0)
            return;

        $concreteContent->setSectionId($params[self::kSectionIdKey]);
        $concreteContent->setHtml($params[self::kHTMLKey]);
        $concreteContent->setVisibility($params[self::kVisibilityKey]=="on" ? 1 : 0);
        $concreteContent->setCreatedAt($concreteContent->getCreatedAt());
        $concreteContent->setUpdatedAt(date("Y-m-d H:m:s"));
        $concreteContent->save();
    }

    /*
     * Delete Content from Section
     * This method deletes concrete section according to incoming identifier
    */
    public static function deleteContentWithIdentifier($identifier)
    {
        $concreteContent = ContentTable::getInstance()->findOneBy(self::kIdKey, $identifier);

        if(count($concreteContent)>0)
            $concreteContent->delete();
    }
}
