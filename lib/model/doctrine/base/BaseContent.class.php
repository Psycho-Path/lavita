<?php

/**
 * BaseContent
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property clob $html
 * @property integer $section_id
 * @property boolean $visibility
 * @property Section $Section
 * 
 * @method integer getId()         Returns the current record's "id" value
 * @method clob    getHtml()       Returns the current record's "html" value
 * @method integer getSectionId()  Returns the current record's "section_id" value
 * @method boolean getVisibility() Returns the current record's "visibility" value
 * @method Section getSection()    Returns the current record's "Section" value
 * @method Content setId()         Sets the current record's "id" value
 * @method Content setHtml()       Sets the current record's "html" value
 * @method Content setSectionId()  Sets the current record's "section_id" value
 * @method Content setVisibility() Sets the current record's "visibility" value
 * @method Content setSection()    Sets the current record's "Section" value
 * 
 * @package    Lavita
 * @subpackage model
 * @author     AlexanderDupree
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseContent extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('content');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('html', 'clob', null, array(
             'type' => 'clob',
             'notnull' => false,
             ));
        $this->hasColumn('section_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => false,
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('visibility', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Section', array(
             'local' => 'section_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}